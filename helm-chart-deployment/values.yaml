####################################################
# Helm chart for Data Engineering module at the IU #
####################################################

kafka:
  listeners:
    client:
      protocol: "PLAINTEXT" #<- this is the important option to disable ssl for clients within the cluster in the beginning
    external:
      protocol: "PLAINTEXT"

  replicaCount: 1

  extraConfigYaml:
    offsets.topic.replication.factor: 1 #needed if there is less than 3 instances

  # Start of needed config for simplified external Access on a developer machine # Setup in production would use different values
  externalAccess:
    enabled: true
    broker:
      service:
        type: LoadBalancer
      ports:
        external: 9094
    controller:
      service:
        type: LoadBalancer
        containerPorts:
        external: 9094
    autoDiscovery:
      enabled: true

  serviceAccount:
    create: true
  rbac:
    create: true

  controller:
    automountServiceAccountToken: true
    replicaCount: 1     # by default three instances, but for development its easier to maintain und debug with one instance (especially because of the LoadBalancer settings)

  broker:
    automountServiceAccountToken: true
  # End of needed config for external Access

akhq:
  configuration:
    akhq:
      connections:
          my-kafka-cluster:
            properties:
              bootstrap.servers: my-release-kafka:9092 # has too match with the name of the release too: <release-name>-kafka:9092
              security.protocol: PLAINTEXT

  service:
    enabled: true
    type: LoadBalancer
    port: 8080


postgresql:
  auth:
    # custom database user
    username: application-user
    password: no-secret-default-password # if deployed to non dev environments use: --set postgresql.auth.password="newpassword"

  primary:

    service:
      type: LoadBalancer

    initdb:
      scripts:

        # sql script which will be executed on first start
        # Will create all nescessary tables. To recreate it needs a removal of the persistent volume: kubectl delete pvc data-my-release-postgresql-0
        create-tables.sql: |
          CREATE TABLE IF NOT EXISTS transactions_aggregated (
              transaction_id SERIAL PRIMARY KEY,
              store_id INT NOT NULL,
              timestamp TIMESTAMPTZ NOT NULL,
              total_price NUMERIC(10, 2) NOT NULL
          );

          CREATE TABLE IF NOT EXISTS inventory (
              warehouse_id VARCHAR(10) NOT NULL,
              item_id VARCHAR(10) NOT NULL,
              item_name VARCHAR(100),
              current_quantity INT NOT NULL DEFAULT 0,
              last_updated TIMESTAMPTZ DEFAULT NOW(),
              PRIMARY KEY (warehouse_id, item_id)
          );

# Chart section for all custom applications
custom-helm-chart:
  global:

    # This environment variables will be set in all services
    # Use extraEnv in the service section to add service specific environment variables
    env:
      - name: TZ
        value: "Europe/Berlin"
      - name: KAFKA_BROKER
        value: "my-release-kafka:9092"
      - name: POSTGRES_HOST
        value: "my-release-postgresql"

  # individual settings for single service applications
  applications:

    ## Applications for publishing data to topic

    # To-Do: Readinessprobe which wait for kafka to be ready before startig the application
    data-ingestion-checkout-microservice:
      image:
        repository: jaspilein/iu-data-engineering-data_ingestion_checkout_microservice
        tag: null
      replicas: 1
      workdir: "/tmp/" #not needed right now

    data-ingestion-warehouse-microservice:
      image:
        repository: jaspilein/iu-data-engineering-data_ingestion_warehouse_microservice
        tag: null
      replicas: 1
      workdir: "/tmp/" #not needed right now


    ## Applications consuming from topics

    aggregation-reporting-microservice:
      image:
        repository: jaspilein/iu-data-engineering-aggregation_reporting_microservice
        tag: null
      replicas: 1
      workdir: "/tmp/" #not needed right now

    automatic-order-microservice:
      image:
        repository: jaspilein/iu-data-engineering-automatic_order_microservice
        tag: null
      replicas: 1
      workdir: "/tmp/" #not needed right now

    kafka-db-mirror-microservice:
      image:
        repository: jaspilein/iu-data-engineering-kafka_db_mirror_microservice
        tag: null
      replicas: 1
      workdir: "/tmp/" #not needed right now

      extraEnv:
        - name: KAFKA_AGGREGATED_TOPIC
          value: "aggregated_checkout,outbound_order,inboud_warehouse_inventory_movements"

  jobs:

    gdpr-microservice:
      schedule: "0 1 * * *" # every day at 1 am
      restartPolicy: Never
      workdir: "/tmp/" #not needed right now
      spec:
        image:
          repository: jaspilein/iu-data-engineering-gdpr_microservice:DEV
          tag: null